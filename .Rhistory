library(devrtools)
library(devtools)
install.packages("devtools")
library(devtools)
devtools::check()
install.packages("roxygen2")
library(roxygen2)
packageVersion("roxygen2")
use_mit_license()
document()
document()
document()
MLR_power_calc <- function(N = NULL,
mus = NULL,
S = NULL,
alpha = NULL,
datasets = NULL) {
# cat(paste("sample for MLR_power_calc:",N,"\n"))
cl <- match.call()
args <- as.list(cl)[-1]
npred <- nrow(args$S) - 1
pval = numeric(datasets)
modelformula = as.formula(paste("y ~", paste(
"x", 1:npred, sep = "", collapse = " + "
)))
for (i in 1:datasets) {
# Data generation
temp = data.frame(MASS::mvrnorm(N,mu = mus,Sigma = S,empirical = FALSE))
names(temp) = c(paste("x", seq(1, npred), sep = ""), "y")
temp = as.data.frame(scale(temp, center = TRUE, scale = TRUE))
# Need to solve (X'X)^-1X'Y
fit = lm(modelformula, data = temp)
# b1 coefficient p-value
pval[i] = summary(fit)$coefficients["x1", "Pr(>|t|)"]
}
power = mean(pval < alpha)
return(power)
}
MLR_power_calc <- function(N = NULL,
mus = NULL,
S = NULL,
alpha = NULL,
datasets = NULL) {
# cat(paste("sample for MLR_power_calc:",N,"\n"))
cl <- match.call()
args <- as.list(cl)[-1]
npred <- nrow(args$S) - 1
pval = numeric(datasets)
modelformula = as.formula(paste("y ~", paste(
"x", 1:npred, sep = "", collapse = " + "
)))
for (i in 1:datasets) {
# Data generation
temp = data.frame(MASS::mvrnorm(N,mu = mus,Sigma = S,empirical = FALSE))
names(temp) = c(paste("x", seq(1, npred), sep = ""), "y")
temp = as.data.frame(scale(temp, center = TRUE, scale = TRUE))
# Need to solve (X'X)^-1X'Y
fit = lm(modelformula, data = temp)
# b1 coefficient p-value
pval[i] = summary(fit)$coefficients["x1", "Pr(>|t|)"]
}
power = mean(pval < alpha)
return(power)
}
document()
rm(list = c("MLR_power_calc"))
document()
devtools::check()
devtools::check()
devtools::check()
document()
devtools::check()
devtools::document()
devtools::check()
S <- matrix(c(
1.00, -0.50, -0.60,  0.55,  0.50,  # SelfEsteem
-0.50,  1.00,  0.70, -0.45, -0.55,  # Anxiety
-0.60,  0.70,  1.00, -0.50, -0.60,  # Depression
0.55, -0.45, -0.50,  1.00,  0.65,  # LifeSatisfaction
0.50, -0.55, -0.60,  0.65,  1.00   # SocialSupport
), nrow=5, byrow=TRUE)
w <- chol(S)
w
(Tau.mtx <- matrix(c(tau2, covU0jU1j, covU0jU1j, varU1j),nrow=2,ncol=2) )
tau2 = 2
varU1j = 1
covU0jU1j= .4
(Tau.mtx <- matrix(c(tau2, covU0jU1j, covU0jU1j, varU1j),nrow=2,ncol=2) )
##      [,1] [,2]
## [1,]  2.0  0.4
## [2,]  0.4  1.0
w <- chol(Tau.mtx)
w
1.414*1.414 + .2828*.2828
w[1,1]^2
w %*% t(w)
t(w) %*% w
.2828*1.414 + 0.959^2
.2828*.2828 + 0.959^2
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
for (i in 1:5) {
cat("rx", i, ".", "x", i, "= 1", sep = "")
}
for (i in 1:5) {
cat("rx", i, ".", "x", i, "= 1\n", sep = "")
}
for (i in 1:5) {
cat("rx", i, ".", "x", i, " = 1\n", sep = "")
}
devtools::check()
devtools::check()
